import os
import re
import fitz  # PyMuPDF
import psycopg2
from sentence_transformers import SentenceTransformer

# –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞: —É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã, —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –∏ –¥—É–±–ª–∏–∫–∞—Ç—ã —Å—Ç—Ä–æ–∫
def clean_text(text):
    text = text.replace("\n", " ").replace("\t", " ")  # –£–±–∏—Ä–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã —Å—Ç—Ä–æ–∫ –∏ —Ç–∞–±—É–ª—è—Ü–∏—é
    text = re.sub(r'\s+', ' ', text).strip()  # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    return text

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ PDF
def extract_text(pdf_path):
    doc = fitz.open(pdf_path)
    text = ' '.join([page.get_text() for page in doc])
    return clean_text(text)

# –û—á–∏—Å—Ç–∫–∞ –ë–î –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
def clear_database():
    conn = psycopg2.connect(
        dbname="postgres",
        user="postgres",
        password="113245",
        host="localhost",
        port=5432
    )
    cur = conn.cursor()
    
    cur.execute("DELETE FROM gost_documents;")  # –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
    conn.commit()
    cur.close()
    conn.close()
    print("üóëÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π!")

# –ü–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –ì–û–°–¢–æ–≤
folder_path = r"C:\Users\culic\Desktop\–ì–û–°–¢–´"
gost_texts = {}

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
for filename in os.listdir(folder_path):
    if filename.lower().endswith('.pdf'):
        file_path = os.path.join(folder_path, filename)
        text = extract_text(file_path)

        if len(text) > 50:  # –§–∏–ª—å—Ç—Ä—É–µ–º –ø—É—Å—Ç—ã–µ –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–µ —Ñ–∞–π–ª—ã
            gost_texts[filename] = text
            print(f"‚úÖ {filename} - —Ç–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á—ë–Ω.")
        else:
            print(f"‚ö†Ô∏è {filename} - —Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ embeddings
model = SentenceTransformer('sentence-transformers/all-MiniLM-L6-v2')
gost_embeddings = {
    filename: model.encode(text).tolist()
    for filename, text in gost_texts.items()
}

print("‚úÖ Embeddings —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã.")

# –ó–∞–ø–∏—Å—å –≤ –ë–î
def insert_into_db(filename, content, embedding):
    conn = psycopg2.connect(
        dbname="postgres",
        user="postgres",
        password="113245",
        host="localhost",
        port=5432
    )
    cur = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ –±–∞–∑–µ (—á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤)
    cur.execute("SELECT COUNT(*) FROM gost_documents WHERE filename = %s;", (filename,))
    result = cur.fetchone()
    
    if result[0] == 0:
        cur.execute("""
            INSERT INTO gost_documents (filename, content, embedding)
            VALUES (%s, %s, %s);
        """, (filename, content, embedding))
        conn.commit()
        print(f"‚úÖ {filename} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î.")
    else:
        print(f"‚ö†Ô∏è {filename} —É–∂–µ –µ—Å—Ç—å –≤ –ë–î, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")

    cur.close()
    conn.close()

# –û—á–∏—â–∞–µ–º –±–∞–∑—É –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
clear_database()

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ì–û–°–¢—ã –≤ –±–∞–∑—É
for filename, embedding in gost_embeddings.items():
    insert_into_db(filename, gost_texts[filename], embedding)

print("‚úÖ –í—Å–µ –ì–û–°–¢—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –ë–î.")
