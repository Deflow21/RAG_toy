from transformers import Qwen2_5_VLForConditionalGeneration, AutoProcessor
import torch
from PIL import Image

model_name = "Qwen/Qwen2.5-VL-7B-Instruct"
processor = AutoProcessor.from_pretrained(model_name)
model = Qwen2_5_VLForConditionalGeneration.from_pretrained(
    model_name, 
    device_map='auto', 
    torch_dtype=torch.bfloat16
)


def generate_json_from_image(image_path, model, processor):
    image = Image.open(image_path).convert('RGB')

    # Обязательный текстовый промт, даже если он минимальный:
    prompt = '''<image> Создай подробное описание технологического процесса 
изготовления изделия на основе технического чертежа 3D
 модели в формате JPG. Процесс должен быть описан в 
формате JSON и включать в себя все этапы механической 
обработки, начиная с анализа чертежа и заканчивая 
получением готового изделия. JSON должен содержать 
следующую информацию:
 1. Наименование файла: название входного файла с чертежом.
 2. Название операции: тип основной операции (например, 
токарная, фрезерная, шлифовальная и т.д.).
 3. Информация о детали: исходные параметры детали (длина, 
ширина, высота/толщина, вес).
 4. Шаги: последовательность действий, выполняемых для 
обработки детали. Каждый шаг должен включать:
 4.1. Номер шага.
 4.2. Описание действия (например, "черновая обработка", 
"чистовая обработка", "сверление отверстий" и т.д.).
 4.3. Используемое оборудование (например, токарный станок, 
фрезерный станок, измерительный инструмент и т.д.).
 4.4. 
Изменения параметров детали (длина, ширина, 
высота/толщина, вес) после выполнения шага. Если параметр 
не изменяется, укажите значение -1.
 Пример JSON:

{
  "Наименование файла": "Название файла на входе",
  "Название операции": "Токарная",
  "Информация о детали": {
    "Длина": 10,
    "Ширина": 10,
    "Высота/толщина": 10,
    "Вес": 10
  },
  "Шаги": [
    {
      "Номер шага": 1,
      "Действие": "Черновая обработка заготовки",
      "Оборудование": ["Токарный станок"],
      "Значение": {
        "Длина": 9,
        "Ширина": 9,
        "Высота/толщина": 9,
        "Вес": 8
      }
    },
    {
      "Номер шага": 2,
      "Действие": "Чистовая обработка поверхности",
      "Оборудование": ["Токарный станок"],
      "Значение": {
        "Длина": 8.5,
        "Ширина": 8.5,
        "Высота/толщина": 8.5,
        "Вес": 7.5
      }
    }
  ]
}


Требования:
(а) Описание каждого шага должно быть максимально точным и соответствовать реальным процессам механической обработки.
(б) Используемое оборудование должно быть указано с учетом специфики операции.
(в) Изменения параметров детали должны быть рассчитаны с учетом реальных технологических допусков.
(г) В ответе должен быть только JSON, без дополнительного текста.'''

    # Подготовка текста
    inputs = processor(text=[prompt], images=[image], return_tensors="pt")
    for k, v in inputs.items():
        inputs[k] = v.to(model.device)

    if "<image>" not in processor.tokenizer.get_vocab():
       processor.tokenizer.add_special_tokens({'additional_special_tokens': ['<image>']})


    with torch.no_grad():
       outputs = model.generate(**inputs, max_new_tokens=1024, do_sample=False)


    json_response = processor.batch_decode(outputs, skip_special_tokens=True)[0]

    return json_response

# Пример использования:
result = generate_json_from_image('чертеж.jpg', model, processor)

print(result)